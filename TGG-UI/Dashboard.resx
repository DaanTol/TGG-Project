<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxHighUrg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>