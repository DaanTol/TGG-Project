<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxHighUrg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAcIAAAHCCAYAAAB8GMlFAAAABGdBTUEAALGPC/xhBQAAFtBJREFUeF7t
        3FuS4zqybdHdkNP/btZVxvUMU0JLD5IuCSTHMJs/tZMvBBz6q/8AAAAAAAAAAAAAAAAAAAAAAAAAABb6
        33//978l1WUAcAzpx+5RdRkAHEP6sXtUXQYAx5B+7B5VlwHAMaQfu0fVZQBwDOnH7lF1GQAcQ/qxe1Rd
        BgDHkH7sHlWXAcAxpB+7R9VlAHAM6cfuUXUZABxD+rF7VF0GAMeQfuweVZcBwDGkH7tH1WUAcAzpx+5R
        dRkAHEP6sXtUXQYAx5B+7B5VlwHAMaQfu0fVZQBwDOnH7lF1GQAcQ/qxe1RdBgDHkH7sHlWXAcAxpB+7
        R9VlAHAM6cfuUXUZABxD+rF7VF0GAMeQfuweVZcBwDGkH7tH1WUAvNvl0H3U34M5/bdVndXl2//5oXtW
        XXZKl+/v7O+apv/2G3Bi6VCo/jmY63/b3Fldvn1cz4fVZad0+f6uxnVN/+Yn4MTSoXBpPED+lv7tos7q
        8u1pPe9Wl53S5fs7iut6Kf3bejJwSuFQSIfHdemalzury7entbxbXXZKl+/fWlzTq26uAU5sOBDSoZEa
        r3s5eCbtmwWl/Zr65zrgxK4Og3RYPOr62peDZ9K+ebG0Tx/1ey1wYnUQpEPilX4PkleDZ9K+eaG0P1/p
        53rgxIZDYU3Xh9HT4Jm0b56U9uWS6snAKYVDYU3jwXQ3eCbtmwel/bi4ejRwRulQWNl4QMXgmbRv7pT2
        4arq0cAZXQ6BzgPl+pCKwTNp34TS/lvTz/2AE/t7ENSh0NH1PW+CZ9K+GUr7bk2/9wRO7PowuJQOizWN
        9/0Nnkn75qq039b0z32BExsPhEvp0FhTunc9Fe5L+6ZK+2xNN/cGTiwdCpfS4bGmm3vDM2nfXEr7a03p
        3vVk4JTSoVClQ2RN/9wXnhn3zKW0r9aU7v0TcGLpULgqHSZr+r0nPHO9Xy6l/bSm8b7/BJxYOhSG0qGy
        pp/7wTN/90rtm46u7xkDTiwdCqF0uKypngr3/dknw77Z0vU+vhtwYulQuFM6ZBZXj4W70r5Z2biH7wac
        WDoUHpQOm0XVY+GutG9WNO7dhwEnlg6FJ6VD5+XqsXBX2jcLG/fs04ATS4fCC6XD55XqqXDfn30y7Jsl
        Xe/TlwNOLB0KL5YOoUf9XAfP/N0rtW+WdH3tooATS4fCgtJhlPq9Bp653i+X0n5KjdctCphcGtyJSofS
        demas5TWY03p3mcqrcl16ZqvBzRKQzZZ6XD6U/q3Ryl97zdL73ik0jf/Kf3bKQIapSGbsN0cUCsav20v
        pW/Zc7v6PqBRGrJJ28UB9aTrg/aIpW/eU7v5DqBRGjK1df0jccbSmqghoFEaMm0q/SAor5VWBjRKQ6bF
        pYNf90trqAUBjdKQ6aXSAa/lpbXVk4BGacj0sHSYa3tprXUnoFEaMt2UDm69r/Q30FVAozRk+i0d0vpc
        6W+iS0CjNGQnLx3I+n7pb3XagEZpyE5aOnw1X+lvd7qARmnITlY6bDV/6W95moBGachOUjpctb/S3/bw
        AY3SkJ2gdKBqv6W/8aEDGqUhO3DpENVxSn/zQwY0SkN2wNKhqeOW9sChAhqlITtY6aDU8Ut74TABjdKQ
        HaR0OOp8pb2x+4BGacgOUDoQdd7SHtl1QKM0ZDsuHYLS39Ke2WVAozRkOy0dfNJY2ju7C2iUhmxnpcNO
        elbaS7sJaJSGbEelA056tbSndhHQKA3ZTkoHm7S0tLemD2iUhmwHpQNNWlvaY1MHNEpDNnHpEJO6Sntu
        yoByGYg0zJ/oZjA/UHoPqbu0995deo+3V8cI7Fva3B9qHOR3l95BeldpD76z9A5vr44R2Le0uT/UOMjv
        LD1fendpL76r9Py3V8cI7Fva3B9qHOR3lZ6t17KG27vei+8sPfvt1TEC+5Y294caB/kdpefq9axjT9d7
        8l2l5769OkZg39Lm/lDjIHeXnqnXs569jevZXXrm26tjBPYtbe4PNQ5yV+lZWp51fU/junaVnvX26hiB
        fUub+0ONg9xVepaWldb1T+nfallpXTtKz3p7dYzAvqXN/aHGQd5aeobWldb3T+nfanlpbbeWnvP26hiB
        fUub+0ONg7y19AwtL63tdekaLS+t7ZbSM95eHSOwb2lzf6hxkLeU7q/lpbUdS9dpXWl915bu//bqGIF9
        S5v7Q42DvLZ0b60rrW8qXat1pfVdU7r326tjBPYtbe4PNQ7ymtJ9ta60vvdK12t9aY2Xlu779uoYAS4D
        8Y3iYGp1aY0fle6h9aU1fmtAozRkby4dJFpfWuNXSvfS+tIavy2gURqyN5YOEG0rrfMrpXtpW2md3xLQ
        KA3ZG0uHh9aX1vjV0v20rbTObwlolIbsTaWDQ+tLa7y0dF9tK61ze0CjNGRvKB0Y2lZa5zWle2tbaZ1b
        AxqlIWsuHRTaVlrntaX7a3tprdsCGqUhaywdENpeWustpWdoe2mtWwIapSFrLB0O2lZa562l52h7aa1b
        AhqlIWsqHQzaXlrrjtKztL201psDGqUhaygdCNpeWuuu0vPUU1rvTQGN0pBtLB0E2l5a6+7Sc9VTWu/V
        AY3SkG0sHQLaXlrr7tJz1VNa79UBjdKQbSgdANpeWut3lZ6vntJ6rwpolIZsQ2n4tb201u8qPV89pfVe
        FdAoDdnK0uBre2mt3116D/WU1ntxQKM0ZCtKA6/tpbX+ROld1Fda80UBjdKQrSgNu7aX1vpTpfdRT2m9
        FwU0SkO2sDTo2l5a60+X3ks9pfV+OaBRGrKFpSHX9tJaf7r0XuoprffLAY3SkC0oDbi2l9b6W6X3U09p
        vV8KaJSG7MXSYKuntN7fKr2f+kpr/jSgURqyF0tDre2ltf526T3VU1rvpwGN0pC9UBpo9ZTW+9ul91Rf
        ac0fBjRKQ/ZCaZi1vbTWs5TeVz2l9X4Y0CgN2ZPSIGt7aa1nKr2z+kprfjegURqyJ6Uh1vbSWs9Wem/1
        lNb7bkCjNGQPSgOs7aW1nrH07uorrXkMaJSG7EFpeLW9tNazlt5fPaX1jgGN0pA9KA2vtpXWeebSN6in
        tN4xoFEasjulwdX20lrPXvoO9ZTW+yagURqyO6Wh1bbSOu+l9D3aXlrrm4BGachCaWC1rbTOeyp9k3pK
        6/1PQKM0ZKE0rNpWWue9lb5L20tr/U9AozRkQ2lQta20znssfZt6Suv9G9AoDdlQGlJtK63zXkvfp+2l
        tf4NaJSGbCgNqdaX1njPpW/U9tJa/wY0SkN2VRpQbSut895L36ntpbX+CWiUhuyqNJxaX1rjJaV7dpae
        +UrpXtpeWuufgEZpyK5Kw6l1pfVdWrpvZ+mZr5bup22ldf4JaJSGrEqDqfWlNV5aum9n6Zmvlu6n7aW1
        rukFWqQhq9JQal1pfdeU7t1ZeuaS0j21rbTONb1AizRkl9JAan1pjdeW7t9RetbS0n21vZu1BhqlIbuU
        hlHrSuu7pfSMjtKz1pTurW3drDPQKA3ZpTSMWl5a262l53SUnrW2dH+t72aNgUZpyC6lYdTy0tpuLT2n
        o/SstaX7a303aww0CkOWBlHLS2vbUXpWR+lZa0v317b+WWOg0Thgl9IQanlpbTtKz+ooPWtL6Rla3z/r
        CzQaB+xSGkItK61rV+l5HaVnbS09R+v6Z22BRsOApQHU8sZ17Sw9r6P0rK2l52hd/6wt0GgYsDSAWta4
        pt2lZ3aUntVRepbW9buuQKPr4bqUhk+vN67nO0rP7Sg9q6P0LK3rd12BRtfDdSkNn15vXM93lJ7bUXpW
        V+l5Wt7vmgKNrofrUho+vda4lu8qPbuj9Kyu0vO0vN81BRpdDVcaPL3e9Vq+u/T8LaVndJeeq+X9rCfQ
        6O9g1ZBpXdfr+InSO2wpPaO79Fwt72c9gUZ/B6uGTOu6XsdPlN5hS+kZ7yg9W8v6WUug0d/BqiHT8q7X
        8FOl99hSesY7Ss/Wsn7WEmj0d7BqyLS86zX8VOk9tpSe8a7S8/V6P+sINPo7WDVkWtb1+n2y9C5bSs94
        Z+kd9Fo/awg0qsFKA6fH/V27b5TeZ0vpGe8svYNer6YXaPFnqIYh02tdH+yfLr3PltIz3l16D71WTS/Q
        4s9QDUOm510f6N8ovdOW0jPeXXoPvVZNL9Diz1ANQ6bnXR/o3yi905bSMz5Rehc9r6YXaPFnqIYh0+Ou
        D/Jvlt5tTenenyq9j55X0wu0+DNUw5DpcdcH+TdL77amdO9Plt5Jj6vpBVr8GaphyHS/6wP826X3W1O6
        9ydL76TH1fQCLf4M1TBkyl0f3jOU3nFN6d6fLr2X7lfTC7T4M1TDkCl3fXDPUHrHNaV7f7r0XrpfTS/Q
        IgyZbhsP7hlK77mmdO9vlN5Nd6rxBTqkIdNN46E9Q+k915Tu/Y3Su+lONb5AhzRk+qfxwJ6l9K5rSvf+
        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
</value>
  </data>
</root>